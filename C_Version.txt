#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <ctype.h>

#define MAX_INPUT_LENGTH 1024

// Function to remove duplicates while preserving order
void removeDuplicatesPreserveOrder(char* numbers) {
    int seen[10] = {0};
    char uniqueNumbers[MAX_INPUT_LENGTH] = "";
    char* token = strtok(numbers, " ");

    while (token != NULL) {
        int num = atoi(token);
        if (!seen[num]) {
            strcat(uniqueNumbers, token);
            strcat(uniqueNumbers, " ");
            seen[num] = 1;
        }
        token = strtok(NULL, " ");
    }

    printf("%s\n", uniqueNumbers);
}

// Function to remove specific characters and filter notes
void filterNotesAndRemoveChars(char* input) {
    char result[MAX_INPUT_LENGTH] = "";
    char* badWords[] = {"bad", "wrong"};
    char* line = strtok(input, "\n");

    while (line != NULL) {
        char phoneNotePair[MAX_INPUT_LENGTH] = "";
        char phone[MAX_INPUT_LENGTH] = "";
        char note[MAX_INPUT_LENGTH] = "";

        sscanf(line, "%s %[^\n]", phone, note);

        // Check if the note contains any bad words
        int isBad = 0;
        for (int i = 0; i < sizeof(badWords) / sizeof(badWords[0]); i++) {
            if (strstr(note, badWords[i]) != NULL) {
                isBad = 1;
                break;
            }
        }

        if (!isBad) {
            strcat(result, phone);
            strcat(result, " ");
        }

        line = strtok(NULL, "\n");
    }

    printf("%s\n", result);
}

int main() {
    char input[MAX_INPUT_LENGTH];

    printf("NumberManipulator Console\n");

    while (1) {
        printf("\nEnter your choice:\n");
        printf("1. DeDupe - Enter the list of numbers separated by spaces\n");
        printf("2. Bad Number Deleter - Enter Numbers with Notes\n");
        printf("3. Exit\n");

        int choice;
        scanf("%d", &choice);
        getchar(); // Consume the newline character

        switch (choice) {
            case 1:
                printf("Enter the list of numbers separated by spaces:\n");
                fgets(input, sizeof(input), stdin);
                removeDuplicatesPreserveOrder(input);
                break;
            case 2:
                printf("Enter Numbers with Notes (e.g., '12345 bad note'):\n");
                fgets(input, sizeof(input), stdin);
                filterNotesAndRemoveChars(input);
                break;
            case 3:
                printf("Exiting...\n");
                exit(0);
            default:
                printf("Invalid choice. Please try again.\n");
        }
    }

    return 0;
}
